function showInfo(t, a) {
    var e = Handlebars.compile($("#department-template").html());
    Papa.parse("http://127.0.0.1:8080/data/grid.csv", 
    {
              download:true,
              header:true,
              complete:function(results) {
                rawData=results.data;
                var n = _.chain(rawData).map(function(t) {
                    return t["Type of Data"]
                }).unique().value();
                setupDatatypes(n);
                _.chain(rawData).groupBy("City").map(function(t, a) {
                    var e = {
                        department: a,
                        state: t[0].State,
                        departmentHref: URI().filename("datasets.html").search({
                            department: a
                        }).toString(),
                        datasets: []
                    };
                     console.log(e['department'])
                    return _.each(n, function(a) {
                        var n = _.find(t, function(t) {
                            return t["Type of Data"] === a
                        });
                        if (n) {
                            var i = {
                                free: n["Data is freely available online"],
                                machine: n["Data is machine readable"],
                                context: n["Context is provided"],
                                bulk: n["Available in bulk"],
                                fresh: n["Up-to-date"],
                                incident: n["Incident-level data"],
                                datasetHref: URI().filename("datasets.html").search({
                                    department: e.department,
                                    datatype: n["Type of Data"]
                                })
                            };
                            i.freeCaption = captions.free[i.free], i.machineCaption = captions.machine[i.machine], i.contextCaption = captions.context[i.context], i.bulkCaption = captions.bulk[i.bulk], i.freshCaption = captions.fresh[i.fresh], i.incidentCaption = captions.incident[i.incident], e.datasets.push(i).toString()
                        } else e.datasets.push({
                            free: "DNE",
                            machine: "DNE",
                            context: "DNE",
                            bulk: "DNE",
                            fresh: "DNE",
                            incident: "DNE",
                            datasetHref: "http://goo.gl/forms/WdJHdBmVLQ"
                        })
                    }), e
                }).each(function(t) {
                                var a = e(t);
                                $("#departments").append(a)
                     }).value();
                $('[data-toggle="tooltip"]').tooltip()

            }
    });
}

function setupDatatypes(t) {
    var a = _.chain(t).map(function(t) {
            return {
                datatype: t,
                datatypeHref: URI().filename(t.replace(/ /g, "") + ".html").toString()
            }
        }).unique().value(),
        e = Handlebars.compile($("#dataset-template").html()),
        n = e(a);
    $("#datasets").append(n)
}



$(document).ready(function() {
    showInfo();
});